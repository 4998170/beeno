// Generated by the protocol buffer compiler.  DO NOT EDIT!

package meetup.beeno;

public final class HDataTypes {
  private HDataTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class DateTime extends
      com.google.protobuf.GeneratedMessage {
    // Use DateTime.newBuilder() to construct.
    private DateTime() {}
    
    private static final DateTime defaultInstance = new DateTime();
    public static DateTime getDefaultInstance() {
      return defaultInstance;
    }
    
    public DateTime getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return meetup.beeno.HDataTypes.internal_static_hbase_DateTime_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return meetup.beeno.HDataTypes.internal_static_hbase_DateTime_fieldAccessorTable;
    }
    
    // required int64 timestamp = 1;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // optional string timezone = 2;
    private boolean hasTimezone;
    private java.lang.String timezone_ = "";
    public boolean hasTimezone() { return hasTimezone; }
    public java.lang.String getTimezone() { return timezone_; }
    
    @Override
    public final boolean isInitialized() {
      if (!hasTimestamp) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasTimestamp()) {
        output.writeInt64(1, getTimestamp());
      }
      if (hasTimezone()) {
        output.writeString(2, getTimezone());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getTimestamp());
      }
      if (hasTimezone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTimezone());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static meetup.beeno.HDataTypes.DateTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.DateTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(meetup.beeno.HDataTypes.DateTime prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using meetup.beeno.HDataTypes.DateTime.newBuilder()
      private Builder() {}
      
      meetup.beeno.HDataTypes.DateTime result = new meetup.beeno.HDataTypes.DateTime();
      
      @Override
      protected meetup.beeno.HDataTypes.DateTime internalGetResult() {
        return result;
      }
      
      @Override
      public Builder clear() {
        result = new meetup.beeno.HDataTypes.DateTime();
        return this;
      }
      
      @Override
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return meetup.beeno.HDataTypes.DateTime.getDescriptor();
      }
      
      public meetup.beeno.HDataTypes.DateTime getDefaultInstanceForType() {
        return meetup.beeno.HDataTypes.DateTime.getDefaultInstance();
      }
      
      public meetup.beeno.HDataTypes.DateTime build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private meetup.beeno.HDataTypes.DateTime buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public meetup.beeno.HDataTypes.DateTime buildPartial() {
        meetup.beeno.HDataTypes.DateTime returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof meetup.beeno.HDataTypes.DateTime) {
          return mergeFrom((meetup.beeno.HDataTypes.DateTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(meetup.beeno.HDataTypes.DateTime other) {
        if (other == meetup.beeno.HDataTypes.DateTime.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasTimezone()) {
          setTimezone(other.getTimezone());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return mergeFrom(input,
          com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTimestamp(input.readInt64());
              break;
            }
            case 18: {
              setTimezone(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int64 timestamp = 1;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // optional string timezone = 2;
      public boolean hasTimezone() {
        return result.hasTimezone();
      }
      public java.lang.String getTimezone() {
        return result.getTimezone();
      }
      public Builder setTimezone(java.lang.String value) {
        result.hasTimezone = true;
        result.timezone_ = value;
        return this;
      }
      public Builder clearTimezone() {
        result.hasTimezone = false;
        result.timezone_ = "";
        return this;
      }
    }
    
    static {
      meetup.beeno.HDataTypes.getDescriptor();
    }
  }
  
  public static final class JavaEnum extends
      com.google.protobuf.GeneratedMessage {
    // Use JavaEnum.newBuilder() to construct.
    private JavaEnum() {}
    
    private static final JavaEnum defaultInstance = new JavaEnum();
    public static JavaEnum getDefaultInstance() {
      return defaultInstance;
    }
    
    public JavaEnum getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return meetup.beeno.HDataTypes.internal_static_hbase_JavaEnum_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return meetup.beeno.HDataTypes.internal_static_hbase_JavaEnum_fieldAccessorTable;
    }
    
    // required string type = 1;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // required string value = 2;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    @Override
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasValue) return false;
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasType()) {
        output.writeString(1, getType());
      }
      if (hasValue()) {
        output.writeString(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getType());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.JavaEnum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(meetup.beeno.HDataTypes.JavaEnum prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using meetup.beeno.HDataTypes.JavaEnum.newBuilder()
      private Builder() {}
      
      meetup.beeno.HDataTypes.JavaEnum result = new meetup.beeno.HDataTypes.JavaEnum();
      
      @Override
      protected meetup.beeno.HDataTypes.JavaEnum internalGetResult() {
        return result;
      }
      
      @Override
      public Builder clear() {
        result = new meetup.beeno.HDataTypes.JavaEnum();
        return this;
      }
      
      @Override
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return meetup.beeno.HDataTypes.JavaEnum.getDescriptor();
      }
      
      public meetup.beeno.HDataTypes.JavaEnum getDefaultInstanceForType() {
        return meetup.beeno.HDataTypes.JavaEnum.getDefaultInstance();
      }
      
      public meetup.beeno.HDataTypes.JavaEnum build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private meetup.beeno.HDataTypes.JavaEnum buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public meetup.beeno.HDataTypes.JavaEnum buildPartial() {
        meetup.beeno.HDataTypes.JavaEnum returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof meetup.beeno.HDataTypes.JavaEnum) {
          return mergeFrom((meetup.beeno.HDataTypes.JavaEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(meetup.beeno.HDataTypes.JavaEnum other) {
        if (other == meetup.beeno.HDataTypes.JavaEnum.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return mergeFrom(input,
          com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setType(input.readString());
              break;
            }
            case 18: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      // required string value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    
    static {
      meetup.beeno.HDataTypes.getDescriptor();
    }
  }
  
  public static final class StringList extends
      com.google.protobuf.GeneratedMessage {
    // Use StringList.newBuilder() to construct.
    private StringList() {}
    
    private static final StringList defaultInstance = new StringList();
    public static StringList getDefaultInstance() {
      return defaultInstance;
    }
    
    public StringList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return meetup.beeno.HDataTypes.internal_static_hbase_StringList_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return meetup.beeno.HDataTypes.internal_static_hbase_StringList_fieldAccessorTable;
    }
    
    // repeated string values = 1;
    private java.util.List<java.lang.String> values_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getValuesList() {
      return values_;
    }
    public int getValuesCount() { return values_.size(); }
    public java.lang.String getValues(int index) {
      return values_.get(index);
    }
    
    @Override
    public final boolean isInitialized() {
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (java.lang.String element : getValuesList()) {
        output.writeString(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (java.lang.String element : getValuesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static meetup.beeno.HDataTypes.StringList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.StringList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(meetup.beeno.HDataTypes.StringList prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using meetup.beeno.HDataTypes.StringList.newBuilder()
      private Builder() {}
      
      meetup.beeno.HDataTypes.StringList result = new meetup.beeno.HDataTypes.StringList();
      
      @Override
      protected meetup.beeno.HDataTypes.StringList internalGetResult() {
        return result;
      }
      
      @Override
      public Builder clear() {
        result = new meetup.beeno.HDataTypes.StringList();
        return this;
      }
      
      @Override
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return meetup.beeno.HDataTypes.StringList.getDescriptor();
      }
      
      public meetup.beeno.HDataTypes.StringList getDefaultInstanceForType() {
        return meetup.beeno.HDataTypes.StringList.getDefaultInstance();
      }
      
      public meetup.beeno.HDataTypes.StringList build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private meetup.beeno.HDataTypes.StringList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public meetup.beeno.HDataTypes.StringList buildPartial() {
        if (result.values_ != java.util.Collections.EMPTY_LIST) {
          result.values_ =
            java.util.Collections.unmodifiableList(result.values_);
        }
        meetup.beeno.HDataTypes.StringList returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof meetup.beeno.HDataTypes.StringList) {
          return mergeFrom((meetup.beeno.HDataTypes.StringList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(meetup.beeno.HDataTypes.StringList other) {
        if (other == meetup.beeno.HDataTypes.StringList.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (result.values_.isEmpty()) {
            result.values_ = new java.util.ArrayList<java.lang.String>();
          }
          result.values_.addAll(other.values_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return mergeFrom(input,
          com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addValues(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string values = 1;
      public java.util.List<java.lang.String> getValuesList() {
        return java.util.Collections.unmodifiableList(result.values_);
      }
      public int getValuesCount() {
        return result.getValuesCount();
      }
      public java.lang.String getValues(int index) {
        return result.getValues(index);
      }
      public Builder setValues(int index, java.lang.String value) {
        result.values_.set(index, value);
        return this;
      }
      public Builder addValues(java.lang.String value) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.String>();
        }
        result.values_.add(value);
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.values_);
        return this;
      }
      public Builder clearValues() {
        result.values_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      meetup.beeno.HDataTypes.getDescriptor();
    }
  }
  
  public static final class HField extends
      com.google.protobuf.GeneratedMessage {
    // Use HField.newBuilder() to construct.
    private HField() {}
    
    private static final HField defaultInstance = new HField();
    public static HField getDefaultInstance() {
      return defaultInstance;
    }
    
    public HField getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return meetup.beeno.HDataTypes.internal_static_hbase_HField_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return meetup.beeno.HDataTypes.internal_static_hbase_HField_fieldAccessorTable;
    }
    
    public static enum Type {
      TEXT(0, 1),
      INTEGER(1, 2),
      FLOAT(2, 3),
      BOOLEAN(3, 4),
      BINARY(4, 5),
      DATETIME(5, 6),
      JAVAENUM(6, 7),
      STRINGLIST(7, 8),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return TEXT;
          case 2: return INTEGER;
          case 3: return FLOAT;
          case 4: return BOOLEAN;
          case 5: return BINARY;
          case 6: return DATETIME;
          case 7: return JAVAENUM;
          case 8: return STRINGLIST;
          default: return null;
        }
      }
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return meetup.beeno.HDataTypes.HField.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        TEXT, INTEGER, FLOAT, BOOLEAN, BINARY, DATETIME, JAVAENUM, STRINGLIST, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        meetup.beeno.HDataTypes.getDescriptor();
      }
    }
    
    // required .hbase.HField.Type type = 1;
    private boolean hasType;
    private meetup.beeno.HDataTypes.HField.Type type_ = meetup.beeno.HDataTypes.HField.Type.TEXT;
    public boolean hasType() { return hasType; }
    public meetup.beeno.HDataTypes.HField.Type getType() { return type_; }
    
    // optional string text = 2;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    // optional int64 integer = 3;
    private boolean hasInteger;
    private long integer_ = 0L;
    public boolean hasInteger() { return hasInteger; }
    public long getInteger() { return integer_; }
    
    // optional double float = 4;
    private boolean hasFloat;
    private double float_ = 0D;
    public boolean hasFloat() { return hasFloat; }
    public double getFloat() { return float_; }
    
    // optional bool boolean = 5;
    private boolean hasBoolean;
    private boolean boolean_ = false;
    public boolean hasBoolean() { return hasBoolean; }
    public boolean getBoolean() { return boolean_; }
    
    // optional bytes binary = 6;
    private boolean hasBinary;
    private com.google.protobuf.ByteString binary_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBinary() { return hasBinary; }
    public com.google.protobuf.ByteString getBinary() { return binary_; }
    
    // optional .hbase.DateTime date_time = 7;
    private boolean hasDateTime;
    private meetup.beeno.HDataTypes.DateTime dateTime_ = meetup.beeno.HDataTypes.DateTime.getDefaultInstance();
    public boolean hasDateTime() { return hasDateTime; }
    public meetup.beeno.HDataTypes.DateTime getDateTime() { return dateTime_; }
    
    // optional .hbase.JavaEnum java_enum = 8;
    private boolean hasJavaEnum;
    private meetup.beeno.HDataTypes.JavaEnum javaEnum_ = meetup.beeno.HDataTypes.JavaEnum.getDefaultInstance();
    public boolean hasJavaEnum() { return hasJavaEnum; }
    public meetup.beeno.HDataTypes.JavaEnum getJavaEnum() { return javaEnum_; }
    
    // optional .hbase.StringList string_list = 9;
    private boolean hasStringList;
    private meetup.beeno.HDataTypes.StringList stringList_ = meetup.beeno.HDataTypes.StringList.getDefaultInstance();
    public boolean hasStringList() { return hasStringList; }
    public meetup.beeno.HDataTypes.StringList getStringList() { return stringList_; }
    
    @Override
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (hasDateTime()) {
        if (!getDateTime().isInitialized()) return false;
      }
      if (hasJavaEnum()) {
        if (!getJavaEnum().isInitialized()) return false;
      }
      return true;
    }
    
    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasText()) {
        output.writeString(2, getText());
      }
      if (hasInteger()) {
        output.writeInt64(3, getInteger());
      }
      if (hasFloat()) {
        output.writeDouble(4, getFloat());
      }
      if (hasBoolean()) {
        output.writeBool(5, getBoolean());
      }
      if (hasBinary()) {
        output.writeBytes(6, getBinary());
      }
      if (hasDateTime()) {
        output.writeMessage(7, getDateTime());
      }
      if (hasJavaEnum()) {
        output.writeMessage(8, getJavaEnum());
      }
      if (hasStringList()) {
        output.writeMessage(9, getStringList());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getText());
      }
      if (hasInteger()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getInteger());
      }
      if (hasFloat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getFloat());
      }
      if (hasBoolean()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getBoolean());
      }
      if (hasBinary()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getBinary());
      }
      if (hasDateTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getDateTime());
      }
      if (hasJavaEnum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getJavaEnum());
      }
      if (hasStringList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getStringList());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static meetup.beeno.HDataTypes.HField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static meetup.beeno.HDataTypes.HField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(meetup.beeno.HDataTypes.HField prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using meetup.beeno.HDataTypes.HField.newBuilder()
      private Builder() {}
      
      meetup.beeno.HDataTypes.HField result = new meetup.beeno.HDataTypes.HField();
      
      @Override
      protected meetup.beeno.HDataTypes.HField internalGetResult() {
        return result;
      }
      
      @Override
      public Builder clear() {
        result = new meetup.beeno.HDataTypes.HField();
        return this;
      }
      
      @Override
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return meetup.beeno.HDataTypes.HField.getDescriptor();
      }
      
      public meetup.beeno.HDataTypes.HField getDefaultInstanceForType() {
        return meetup.beeno.HDataTypes.HField.getDefaultInstance();
      }
      
      public meetup.beeno.HDataTypes.HField build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private meetup.beeno.HDataTypes.HField buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public meetup.beeno.HDataTypes.HField buildPartial() {
        meetup.beeno.HDataTypes.HField returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof meetup.beeno.HDataTypes.HField) {
          return mergeFrom((meetup.beeno.HDataTypes.HField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(meetup.beeno.HDataTypes.HField other) {
        if (other == meetup.beeno.HDataTypes.HField.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        if (other.hasInteger()) {
          setInteger(other.getInteger());
        }
        if (other.hasFloat()) {
          setFloat(other.getFloat());
        }
        if (other.hasBoolean()) {
          setBoolean(other.getBoolean());
        }
        if (other.hasBinary()) {
          setBinary(other.getBinary());
        }
        if (other.hasDateTime()) {
          mergeDateTime(other.getDateTime());
        }
        if (other.hasJavaEnum()) {
          mergeJavaEnum(other.getJavaEnum());
        }
        if (other.hasStringList()) {
          mergeStringList(other.getStringList());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return mergeFrom(input,
          com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }
      
      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              meetup.beeno.HDataTypes.HField.Type value = meetup.beeno.HDataTypes.HField.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 18: {
              setText(input.readString());
              break;
            }
            case 24: {
              setInteger(input.readInt64());
              break;
            }
            case 33: {
              setFloat(input.readDouble());
              break;
            }
            case 40: {
              setBoolean(input.readBool());
              break;
            }
            case 50: {
              setBinary(input.readBytes());
              break;
            }
            case 58: {
              meetup.beeno.HDataTypes.DateTime.Builder subBuilder = meetup.beeno.HDataTypes.DateTime.newBuilder();
              if (hasDateTime()) {
                subBuilder.mergeFrom(getDateTime());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDateTime(subBuilder.buildPartial());
              break;
            }
            case 66: {
              meetup.beeno.HDataTypes.JavaEnum.Builder subBuilder = meetup.beeno.HDataTypes.JavaEnum.newBuilder();
              if (hasJavaEnum()) {
                subBuilder.mergeFrom(getJavaEnum());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setJavaEnum(subBuilder.buildPartial());
              break;
            }
            case 74: {
              meetup.beeno.HDataTypes.StringList.Builder subBuilder = meetup.beeno.HDataTypes.StringList.newBuilder();
              if (hasStringList()) {
                subBuilder.mergeFrom(getStringList());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStringList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .hbase.HField.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public meetup.beeno.HDataTypes.HField.Type getType() {
        return result.getType();
      }
      public Builder setType(meetup.beeno.HDataTypes.HField.Type value) {
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = meetup.beeno.HDataTypes.HField.Type.TEXT;
        return this;
      }
      
      // optional string text = 2;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      // optional int64 integer = 3;
      public boolean hasInteger() {
        return result.hasInteger();
      }
      public long getInteger() {
        return result.getInteger();
      }
      public Builder setInteger(long value) {
        result.hasInteger = true;
        result.integer_ = value;
        return this;
      }
      public Builder clearInteger() {
        result.hasInteger = false;
        result.integer_ = 0L;
        return this;
      }
      
      // optional double float = 4;
      public boolean hasFloat() {
        return result.hasFloat();
      }
      public double getFloat() {
        return result.getFloat();
      }
      public Builder setFloat(double value) {
        result.hasFloat = true;
        result.float_ = value;
        return this;
      }
      public Builder clearFloat() {
        result.hasFloat = false;
        result.float_ = 0D;
        return this;
      }
      
      // optional bool boolean = 5;
      public boolean hasBoolean() {
        return result.hasBoolean();
      }
      public boolean getBoolean() {
        return result.getBoolean();
      }
      public Builder setBoolean(boolean value) {
        result.hasBoolean = true;
        result.boolean_ = value;
        return this;
      }
      public Builder clearBoolean() {
        result.hasBoolean = false;
        result.boolean_ = false;
        return this;
      }
      
      // optional bytes binary = 6;
      public boolean hasBinary() {
        return result.hasBinary();
      }
      public com.google.protobuf.ByteString getBinary() {
        return result.getBinary();
      }
      public Builder setBinary(com.google.protobuf.ByteString value) {
        result.hasBinary = true;
        result.binary_ = value;
        return this;
      }
      public Builder clearBinary() {
        result.hasBinary = false;
        result.binary_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }
      
      // optional .hbase.DateTime date_time = 7;
      public boolean hasDateTime() {
        return result.hasDateTime();
      }
      public meetup.beeno.HDataTypes.DateTime getDateTime() {
        return result.getDateTime();
      }
      public Builder setDateTime(meetup.beeno.HDataTypes.DateTime value) {
        result.hasDateTime = true;
        result.dateTime_ = value;
        return this;
      }
      public Builder setDateTime(meetup.beeno.HDataTypes.DateTime.Builder builderForValue) {
        result.hasDateTime = true;
        result.dateTime_ = builderForValue.build();
        return this;
      }
      public Builder mergeDateTime(meetup.beeno.HDataTypes.DateTime value) {
        if (result.hasDateTime() &&
            result.dateTime_ != meetup.beeno.HDataTypes.DateTime.getDefaultInstance()) {
          result.dateTime_ =
            meetup.beeno.HDataTypes.DateTime.newBuilder(result.dateTime_).mergeFrom(value).buildPartial();
        } else {
          result.dateTime_ = value;
        }
        result.hasDateTime = true;
        return this;
      }
      public Builder clearDateTime() {
        result.hasDateTime = false;
        result.dateTime_ = meetup.beeno.HDataTypes.DateTime.getDefaultInstance();
        return this;
      }
      
      // optional .hbase.JavaEnum java_enum = 8;
      public boolean hasJavaEnum() {
        return result.hasJavaEnum();
      }
      public meetup.beeno.HDataTypes.JavaEnum getJavaEnum() {
        return result.getJavaEnum();
      }
      public Builder setJavaEnum(meetup.beeno.HDataTypes.JavaEnum value) {
        result.hasJavaEnum = true;
        result.javaEnum_ = value;
        return this;
      }
      public Builder setJavaEnum(meetup.beeno.HDataTypes.JavaEnum.Builder builderForValue) {
        result.hasJavaEnum = true;
        result.javaEnum_ = builderForValue.build();
        return this;
      }
      public Builder mergeJavaEnum(meetup.beeno.HDataTypes.JavaEnum value) {
        if (result.hasJavaEnum() &&
            result.javaEnum_ != meetup.beeno.HDataTypes.JavaEnum.getDefaultInstance()) {
          result.javaEnum_ =
            meetup.beeno.HDataTypes.JavaEnum.newBuilder(result.javaEnum_).mergeFrom(value).buildPartial();
        } else {
          result.javaEnum_ = value;
        }
        result.hasJavaEnum = true;
        return this;
      }
      public Builder clearJavaEnum() {
        result.hasJavaEnum = false;
        result.javaEnum_ = meetup.beeno.HDataTypes.JavaEnum.getDefaultInstance();
        return this;
      }
      
      // optional .hbase.StringList string_list = 9;
      public boolean hasStringList() {
        return result.hasStringList();
      }
      public meetup.beeno.HDataTypes.StringList getStringList() {
        return result.getStringList();
      }
      public Builder setStringList(meetup.beeno.HDataTypes.StringList value) {
        result.hasStringList = true;
        result.stringList_ = value;
        return this;
      }
      public Builder setStringList(meetup.beeno.HDataTypes.StringList.Builder builderForValue) {
        result.hasStringList = true;
        result.stringList_ = builderForValue.build();
        return this;
      }
      public Builder mergeStringList(meetup.beeno.HDataTypes.StringList value) {
        if (result.hasStringList() &&
            result.stringList_ != meetup.beeno.HDataTypes.StringList.getDefaultInstance()) {
          result.stringList_ =
            meetup.beeno.HDataTypes.StringList.newBuilder(result.stringList_).mergeFrom(value).buildPartial();
        } else {
          result.stringList_ = value;
        }
        result.hasStringList = true;
        return this;
      }
      public Builder clearStringList() {
        result.hasStringList = false;
        result.stringList_ = meetup.beeno.HDataTypes.StringList.getDefaultInstance();
        return this;
      }
    }
    
    static {
      meetup.beeno.HDataTypes.getDescriptor();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hbase_DateTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hbase_DateTime_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hbase_JavaEnum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hbase_JavaEnum_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hbase_StringList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hbase_StringList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hbase_HField_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hbase_HField_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String descriptorData =
      "\n\034meetup/beeno/datatypes.proto\022\005hbase\032 g" +
      "oogle/protobuf/descriptor.proto\"/\n\010DateT" +
      "ime\022\021\n\ttimestamp\030\001 \002(\003\022\020\n\010timezone\030\002 \001(\t" +
      "\"\'\n\010JavaEnum\022\014\n\004type\030\001 \002(\t\022\r\n\005value\030\002 \002(" +
      "\t\"\034\n\nStringList\022\016\n\006values\030\001 \003(\t\"\330\002\n\006HFie" +
      "ld\022 \n\004type\030\001 \002(\0162\022.hbase.HField.Type\022\014\n\004" +
      "text\030\002 \001(\t\022\017\n\007integer\030\003 \001(\003\022\r\n\005float\030\004 \001" +
      "(\001\022\017\n\007boolean\030\005 \001(\010\022\016\n\006binary\030\006 \001(\014\022\"\n\td" +
      "ate_time\030\007 \001(\0132\017.hbase.DateTime\022\"\n\tjava_" +
      "enum\030\010 \001(\0132\017.hbase.JavaEnum\022&\n\013string_li" +
      "st\030\t \001(\0132\021.hbase.StringList\"m\n\004Type\022\010\n\004T" +
      "EXT\020\001\022\013\n\007INTEGER\020\002\022\t\n\005FLOAT\020\003\022\013\n\007BOOLEAN" +
      "\020\004\022\n\n\006BINARY\020\005\022\014\n\010DATETIME\020\006\022\014\n\010JAVAENUM" +
      "\020\007\022\016\n\nSTRINGLIST\020\010B\034\n\014meetup.beenoB\nHDat" +
      "aTypesH\001";
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_hbase_DateTime_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_hbase_DateTime_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hbase_DateTime_descriptor,
              new java.lang.String[] { "Timestamp", "Timezone", },
              meetup.beeno.HDataTypes.DateTime.class,
              meetup.beeno.HDataTypes.DateTime.Builder.class);
          internal_static_hbase_JavaEnum_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_hbase_JavaEnum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hbase_JavaEnum_descriptor,
              new java.lang.String[] { "Type", "Value", },
              meetup.beeno.HDataTypes.JavaEnum.class,
              meetup.beeno.HDataTypes.JavaEnum.Builder.class);
          internal_static_hbase_StringList_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_hbase_StringList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hbase_StringList_descriptor,
              new java.lang.String[] { "Values", },
              meetup.beeno.HDataTypes.StringList.class,
              meetup.beeno.HDataTypes.StringList.Builder.class);
          internal_static_hbase_HField_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_hbase_HField_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hbase_HField_descriptor,
              new java.lang.String[] { "Type", "Text", "Integer", "Float", "Boolean", "Binary", "DateTime", "JavaEnum", "StringList", },
              meetup.beeno.HDataTypes.HField.class,
              meetup.beeno.HDataTypes.HField.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        }, assigner);
  }
}
