9/24/2009:

* Implement some form of proxying for retrieved entity instances (possibly using cglib?) -- 
  this would allow watching matched properties for changes so that we can properly 
  synchronize the stored values
  
* HUtil pool configuration is static and all hard-coded.  This sucks.

* Need unit tests.  Can start with some meetup db tests, but need to
  be able to bootstrap and run them.


10/8/2009: 

* Straight scans aren't very intuitive with the query API, you kind of
  work-around it to get them.  Need to more easily enable this common
  usage. 

* For query scanning of secondary index tables, should maybe use row
  prefix filters instead of value filters

1-28-2010:

* Rework the query API
  * QueryOpts is clumsy.  It shouldn't be exposed as an external
    object.  Instead, use it internally to consolidate settings, but
	the query instance should function more as a builder:
		q = service.query();
		q.start( startkey )
		 .where( Criteria.eq( 'prop', value ) )
		 .where( Criteria.eq( 'prop2', value2 ) )
		 .end( endkey );
		q.execute();

    or for an indexed query:
        q = service.query();
		q.using( Criteria.eq( 'idxprop', value ) )
         .where( Criteria.gt( 'prop2', minvalue ) );
		q.execute();
    
